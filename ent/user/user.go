// Code generated by entc, DO NOT EDIT.

package user

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldToken holds the string denoting the token field in the database.
	FieldToken = "token"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldFirstName holds the string denoting the first_name field in the database.
	FieldFirstName = "first_name"
	// FieldLastName holds the string denoting the last_name field in the database.
	FieldLastName = "last_name"
	// FieldTutor holds the string denoting the tutor field in the database.
	FieldTutor = "tutor"
	// EdgeEvents holds the string denoting the events edge name in mutations.
	EdgeEvents = "events"
	// Table holds the table name of the user in the database.
	Table = "users"
	// EventsTable is the table that holds the events relation/edge. The primary key declared below.
	EventsTable = "event_users"
	// EventsInverseTable is the table name for the Event entity.
	// It exists in this package in order to avoid circular dependency with the "event" package.
	EventsInverseTable = "events"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldToken,
	FieldName,
	FieldFirstName,
	FieldLastName,
	FieldTutor,
}

var (
	// EventsPrimaryKey and EventsColumn2 are the table columns denoting the
	// primary key for the events relation (M2M).
	EventsPrimaryKey = []string{"event_id", "user_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultTutor holds the default value on creation for the "tutor" field.
	DefaultTutor bool
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
