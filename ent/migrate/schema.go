// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// EventsColumns holds the columns for the "events" table.
	EventsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Default: ""},
		{Name: "date_creation", Type: field.TypeTime},
		{Name: "date_update", Type: field.TypeTime},
		{Name: "date_start", Type: field.TypeTime},
		{Name: "date_end", Type: field.TypeTime},
		{Name: "nb_tutors", Type: field.TypeInt},
	}
	// EventsTable holds the schema information for the "events" table.
	EventsTable = &schema.Table{
		Name:       "events",
		Columns:    EventsColumns,
		PrimaryKey: []*schema.Column{EventsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "event_name_date_start_date_end",
				Unique:  true,
				Columns: []*schema.Column{EventsColumns[1], EventsColumns[5], EventsColumns[6]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "token", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "tutor", Type: field.TypeBool, Default: false},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// EventUsersColumns holds the columns for the "event_users" table.
	EventUsersColumns = []*schema.Column{
		{Name: "event_id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// EventUsersTable holds the schema information for the "event_users" table.
	EventUsersTable = &schema.Table{
		Name:       "event_users",
		Columns:    EventUsersColumns,
		PrimaryKey: []*schema.Column{EventUsersColumns[0], EventUsersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "event_users_event_id",
				Columns:    []*schema.Column{EventUsersColumns[0]},
				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "event_users_user_id",
				Columns:    []*schema.Column{EventUsersColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		EventsTable,
		UsersTable,
		EventUsersTable,
	}
)

func init() {
	EventUsersTable.ForeignKeys[0].RefTable = EventsTable
	EventUsersTable.ForeignKeys[1].RefTable = UsersTable
}
